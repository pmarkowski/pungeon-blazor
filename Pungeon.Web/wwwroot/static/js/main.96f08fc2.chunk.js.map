{"version":3,"sources":["Store.js","DungeonEditor.js","StateEditor.js","App.js","serviceWorker.js","index.js"],"names":["store","createStore","state","action","type","moveY","mouseDown","mouseStartX","x","mouseStartY","y","spaceArray","dungeon","spaces","slice","newSpace","id","size","width","height","position","walls","start","end","window","__REDUX_DEVTOOLS_EXTENSION__","DungeonEditor","ref","element","canvasDiv","app","PIXI","backgroundColor","sharedLoader","sharedTicker","antialias","this","appendChild","view","resizeTo","resize","graphics","stage","addChild","addEventListener","wheelEvent","scaleDelta","wheelDeltaY","newScale","Math","min","max","scale","set","localMousePoint","renderer","plugins","interaction","mouse","getLocalPosition","event","preventDefault","onMouseDown","onMouseUp","pointerEvent","buttons","movementX","movementY","ticker","add","delta","getState","clear","drawSpaces","drawWalls","drawGrid","mouseOverRenderer","drawSelectedGridBox","button","mousePoint","dispatch","gridTileSize","startX","floor","startY","endX","ceil","endY","uuid","dungeonRooms","beginFill","forEach","space","drawRect","endFill","dungeonWalls","wall","lineStyle","moveTo","lineTo","drawCircle","snappedX","snappedY","gridWidth","gridHeight","i","j","React","Component","StateEditor","onClick","connect","App","Fragment","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.96f08fc2.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\n\r\nconst store = createStore((state = {}, action) => {\r\n    switch (action.type) {\r\n      case 'TOGGLE_MOVE_Y':\r\n        return { ...state, moveY: !state.moveY };\r\n      case 'MOUSE_DOWN':\r\n        return { ...state, mouseDown: true, mouseStartX: action.x, mouseStartY: action.y };\r\n      case 'MOUSE_UP':\r\n        return { ...state, mouseDown: false };\r\n      case 'ADD_SPACE':\r\n        let spaceArray = state.dungeon.spaces.slice();\r\n        spaceArray = [...spaceArray, action.newSpace ];\r\n        return {\r\n          ...state,\r\n          dungeon: {\r\n            ...state.dungeon,\r\n            spaces: spaceArray\r\n          }\r\n        };\r\n      default:\r\n        return state\r\n    }\r\n  },\r\n  {\r\n    id: '823cc811-9499-4f3d-abeb-941d2ee4fd98',\r\n    moveY: false,\r\n    mouseDown: false,\r\n    mouseStartX: 0,\r\n    mouseStartY: 0,\r\n    dungeon: {\r\n      size: {\r\n        width: 28,\r\n        height: 32\r\n      },\r\n      spaces: [\r\n        {\r\n          id: \"01f998f7-3ad4-43c6-b498-3249ab470b05\",\r\n          position: {\r\n            x: 1,\r\n            y: 1\r\n          },\r\n          size: {\r\n            width: 5,\r\n            height: 5\r\n          }\r\n        },\r\n        {\r\n          id: \"79178d8c-3a3e-42ee-b1ec-00dc37a045fc\",\r\n          position: {\r\n            x: 6,\r\n            y: 4\r\n          },\r\n          size: {\r\n            width: 7,\r\n            height: 9\r\n          }\r\n        },\r\n        {\r\n          id: \"6ce25fdc-9fd4-46c0-a924-74f5f9174193\",\r\n          position: {\r\n            x: 15,\r\n            y: 15\r\n          },\r\n          size: {\r\n            width: 6,\r\n            height: 7\r\n          }\r\n        },\r\n        {\r\n          id: \"e211fbd3-a817-47a5-bb47-481ba330e46d\",\r\n          position: {\r\n            x: 21,\r\n            y: 19\r\n          },\r\n          size: {\r\n            width: 4,\r\n            height: 9\r\n          }\r\n        }\r\n      ],\r\n      walls: [\r\n        {\r\n          start: {\r\n            x: 1,\r\n            y: 1\r\n          },\r\n          end: {\r\n            x: 1,\r\n            y: 6\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 6,\r\n            y: 6\r\n          },\r\n          end: {\r\n            x: 1,\r\n            y: 6\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 6,\r\n            y: 13\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 6\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 13,\r\n            y: 13\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 13\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 13,\r\n            y: 4\r\n          },\r\n          end: {\r\n            x: 13,\r\n            y: 13\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 6,\r\n            y: 4\r\n          },\r\n          end: {\r\n            x: 13,\r\n            y: 4\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 6,\r\n            y: 1\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 4\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 1,\r\n            y: 1\r\n          },\r\n          end: {\r\n            x: 6,\r\n            y: 1\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 15,\r\n            y: 15\r\n          },\r\n          end: {\r\n            x: 15,\r\n            y: 22\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 21,\r\n            y: 22\r\n          },\r\n          end: {\r\n            x: 15,\r\n            y: 22\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 21,\r\n            y: 15\r\n          },\r\n          end: {\r\n            x: 15,\r\n            y: 15\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 21,\r\n            y: 19\r\n          },\r\n          end: {\r\n            x: 21,\r\n            y: 15\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 25,\r\n            y: 19\r\n          },\r\n          end: {\r\n            x: 21,\r\n            y: 19\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 21,\r\n            y: 22\r\n          },\r\n          end: {\r\n            x: 21,\r\n            y: 28\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 21,\r\n            y: 28\r\n          },\r\n          end: {\r\n            x: 25,\r\n            y: 28\r\n          }\r\n        },\r\n        {\r\n          start: {\r\n            x: 25,\r\n            y: 19\r\n          },\r\n          end: {\r\n            x: 25,\r\n            y: 28\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react'\r\nimport * as PIXI from 'pixi.js'\r\nimport store from './Store.js'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport default class DungeonEditor extends React.Component {\r\n    render() {\r\n        return <div ref={(element) => this.canvasDiv = element}></div>\r\n    }\r\n\r\n    componentDidMount() {\r\n        const app = new PIXI.Application({\r\n            backgroundColor: 0x5f5f5f,\r\n            width: 800,\r\n            height: 600,\r\n            sharedLoader: true,\r\n            sharedTicker: true,\r\n            antialias: true\r\n        });\r\n        this.app = app;\r\n        this.canvasDiv.appendChild(app.view);\r\n        this.app.resizeTo = this.canvasDiv;\r\n        this.app.resize();\r\n\r\n        // Render a circle to a texture\r\n        let graphics = new PIXI.Graphics();\r\n        app.stage.addChild(graphics);\r\n\r\n        let gridTileSize = 70.0;\r\n        this.canvasDiv.addEventListener(\"wheel\", (wheelEvent) => {\r\n            let scaleDelta = 0.1;\r\n            if (wheelEvent.wheelDeltaY < 0) {\r\n                scaleDelta *= -1;\r\n            }\r\n            let newScale = Math.min(Math.max(app.stage.scale.x + scaleDelta, 0.1), 2);\r\n            if (newScale !== app.stage.scale.x) {\r\n                app.stage.scale.set(newScale);\r\n\r\n                let localMousePoint = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n                app.stage.position.x -= (localMousePoint.x) * scaleDelta;\r\n                app.stage.position.y -= (localMousePoint.y) * scaleDelta;\r\n            }\r\n        });\r\n        this.canvasDiv.addEventListener('contextmenu', (event) => {\r\n            event.preventDefault();\r\n        })\r\n        this.canvasDiv.addEventListener('pointerdown', () => {\r\n            this.onMouseDown(app);\r\n        });\r\n        this.canvasDiv.addEventListener('pointerup', () => {\r\n            this.onMouseUp(app, gridTileSize);\r\n        });\r\n        this.canvasDiv.addEventListener('pointermove', (pointerEvent) => {\r\n            if (pointerEvent.buttons === 2) {\r\n                app.stage.position.x += pointerEvent.movementX;\r\n                app.stage.position.y += pointerEvent.movementY;\r\n            }\r\n        });\r\n\r\n        app.ticker.add((delta) => {\r\n            var state = store.getState();\r\n\r\n            graphics.clear();\r\n\r\n            this.drawSpaces(graphics, state.dungeon.spaces, gridTileSize);\r\n            this.drawWalls(graphics, state.dungeon.walls, gridTileSize);\r\n            this.drawGrid(graphics, state.dungeon.size.width, state.dungeon.size.height, gridTileSize);\r\n\r\n            if (app.renderer.plugins.interaction.mouseOverRenderer) {\r\n                this.drawSelectedGridBox(app, state, gridTileSize, graphics);\r\n            }\r\n        });\r\n    }\r\n\r\n    onMouseDown(app) {\r\n        if (app.renderer.plugins.interaction.mouse.button === 0) {\r\n            let mousePoint = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n            store.dispatch({ type: 'MOUSE_DOWN', x: mousePoint.x, y: mousePoint.y });\r\n        }\r\n    }\r\n\r\n    onMouseUp(app, gridTileSize) {\r\n        if (app.renderer.plugins.interaction.mouse.button === 0) {\r\n            let mousePoint = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n            store.dispatch({ type: 'MOUSE_UP' });\r\n            // TODO: Some terrible redux practices here I'm sure\r\n            // Yep, this should go into the reducer or dispatch a thunk that will have access\r\n            // to the full state.\r\n            let state = store.getState();\r\n            let startX = Math.floor(Math.min(state.mouseStartX, mousePoint.x) / gridTileSize);\r\n            let startY = Math.floor(Math.min(state.mouseStartY, mousePoint.y) / gridTileSize);\r\n            let endX = Math.ceil(Math.max(state.mouseStartX, mousePoint.x) / gridTileSize);\r\n            let endY = Math.ceil(Math.max(state.mouseStartY, mousePoint.y) / gridTileSize);\r\n            store.dispatch({\r\n                type: 'ADD_SPACE', newSpace: {\r\n                    id: uuid(),\r\n                    position: {\r\n                        x: startX,\r\n                        y: startY\r\n                    },\r\n                    size: {\r\n                        width: endX - startX,\r\n                        height: endY - startY\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    drawSpaces(graphics, dungeonRooms, gridTileSize) {\r\n        graphics.beginFill(0xd6d5d5);\r\n        dungeonRooms.forEach(space => {\r\n            graphics.drawRect(\r\n                space.position.x * gridTileSize,\r\n                space.position.y * gridTileSize,\r\n                space.size.width * gridTileSize,\r\n                space.size.height * gridTileSize);\r\n        });\r\n        graphics.endFill();\r\n    }\r\n\r\n    drawWalls(graphics, dungeonWalls, gridTileSize) {\r\n        graphics.beginFill();\r\n        dungeonWalls.forEach(wall => {\r\n            graphics.beginFill(0x0266e6, 1);\r\n            graphics.lineStyle(10, 0x0266e6, 1, 0.5);\r\n            graphics.moveTo(wall.start.x * gridTileSize, wall.start.y * gridTileSize);\r\n            graphics.lineTo(wall.end.x * gridTileSize, wall.end.y * gridTileSize);\r\n            graphics.lineStyle();\r\n            graphics.drawCircle(wall.start.x * gridTileSize, wall.start.y * gridTileSize, 5);\r\n            graphics.drawCircle(wall.end.x * gridTileSize, wall.end.y * gridTileSize, 5);\r\n            graphics.endFill();\r\n        })\r\n    }\r\n\r\n    drawSelectedGridBox(app, state, gridTileSize, graphics) {\r\n        let mousePoint = app.renderer.plugins.interaction.mouse.getLocalPosition(app.stage);\r\n        let snappedX, snappedY, width, height;\r\n        if (state.mouseDown) {\r\n            let startX = Math.min(state.mouseStartX, mousePoint.x);\r\n            let startY = Math.min(state.mouseStartY, mousePoint.y);\r\n            let endX = Math.max(state.mouseStartX, mousePoint.x);\r\n            let endY = Math.max(state.mouseStartY, mousePoint.y);\r\n            snappedX = Math.floor(startX / gridTileSize) * gridTileSize;\r\n            snappedY = Math.floor(startY / gridTileSize) * gridTileSize;\r\n            endX = Math.floor(endX / gridTileSize) * gridTileSize + gridTileSize;\r\n            endY = Math.floor(endY / gridTileSize) * gridTileSize + gridTileSize;\r\n            width = endX - snappedX;\r\n            height = endY - snappedY;\r\n        }\r\n        else {\r\n            // snap to nearest grid point\r\n            // for now for simplicity let's say top left\r\n            snappedX = Math.floor(mousePoint.x / gridTileSize) * gridTileSize;\r\n            snappedY = Math.floor(mousePoint.y / gridTileSize) * gridTileSize;\r\n            width = gridTileSize;\r\n            height = gridTileSize;\r\n        }\r\n        // draw a hover rect\r\n        graphics.beginFill(0, 0);\r\n        graphics.lineStyle(1, 0xfffd00);\r\n        graphics.drawRect(snappedX, snappedY, width, height);\r\n        graphics.endFill();\r\n    }\r\n\r\n    drawGrid(graphics, gridWidth, gridHeight, gridTileSize) {\r\n        graphics.lineStyle(1, 0x444444, 1, 0.5);\r\n        for (var i = 0; i < gridWidth; i++) {\r\n            graphics.moveTo(i * gridTileSize, 0);\r\n            graphics.lineTo(i * gridTileSize, (gridHeight - 1) * gridTileSize);\r\n        }\r\n        for (var j = 0; j < gridHeight; j++) {\r\n            graphics.moveTo(0, j * gridTileSize);\r\n            graphics.lineTo((gridWidth - 1) * gridTileSize, j * gridTileSize);\r\n        }\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { connect } from 'react-redux'\r\n\r\nlet StateEditor = ({ dispatch }) => {\r\n    return (\r\n        <div>\r\n            <button onClick={() => dispatch({type: 'TOGGLE_MOVE_Y'})}>Toggle Y Movement</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nStateEditor = connect()(StateEditor)\r\n\r\nexport default StateEditor\r\n","import React from 'react';\r\nimport './App.css';\r\nimport DungeonEditor from \"./DungeonEditor.js\";\r\nimport StateEditor from './StateEditor';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-dark bg-secondary\">\r\n        <span className=\"navbar-brand\">\r\n          Pungeon\r\n        </span>\r\n      </nav>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <DungeonEditor />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <StateEditor />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Store.js'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}